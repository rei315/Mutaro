name: Check Swift Dependency

on:
  workflow_dispatch

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Run Ruby script
        id: ruby-script
        env:
          FILE_PATH: "../Mutaro/Mutaro.xcworkspace/xcshareddata/swiftpm/Package.resolved"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: ruby ./.github/workflows/swift_dependency_check_latest_version.rb ${FILE_PATH} ${GITHUB_TOKEN}

      - name: Create Branch and PR
        id: cb
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
                    
          branchName="feature/update-dependency"
                    
          if git rev-parse --verify update-dependencies >/dev/null 2>&1; then
            git branch -D $branchName
          fi
          
          if git ls-remote --exit-code --heads origin update-dependencies >/dev/null 2>&1; then
            git push origin --delete $branchName
          fi          
          
          git branch $branchName
          git switch $branchName
          git commit --allow-empty -m "Empty-Commit"
          git push --set-upstream origin $branchName
          
          pr_number=$(gh pr create --base develop --title "Update Swift Package Dependency" --body "" | grep -oP '(?<=https:\/\/github.com\/[^/]+\/[^/]+\/pull\/)[0-9]+')
          echo "pull-request-number=${pr_number}" >> $GITHUB_OUTPUT
          
      - name: Add comments to PR
        run: |
          result="${{ steps.ruby-script.outputs.result }}"
          IFS=$'\n'
          for line in $result; do
            owner=$(echo "$line" | ruby -rjson -e 'puts JSON.parse(ARGF.read)["owner"]')
            repository=$(echo "$line" | ruby -rjson -e 'puts JSON.parse(ARGF.read)["repository"]')
            currentVersion=$(echo "$line" | ruby -rjson -e 'puts JSON.parse(ARGF.read)["currentVersion"]')
            newVersion=$(echo "$line" | ruby -rjson -e 'puts JSON.parse(ARGF.read)["newVersion"]')

            comment="CurrentVersion: $currentVersion\nNewVersion: $newVersion\nRepository: $repository"

            echo "$comment" | gh issue comment ${{ secrets.GITHUB_TOKEN }} -R $owner/$repository ${{ steps.cpr.outputs.pull-request-number }}
          done
